function createExtJsTree(parentId, pluginParams, data) {    Ext.require([        'Ext.tree.*',        'Ext.data.*'        ]);    var parent = Ext.get(parentId);		    Ext.onReady(function() {		Ext.define('Item', {			extend: 'Ext.data.Model',			fields: [				{ name: 'id', type: 'string' },				{ name: 'name', type: 'string' }			],						statics: {				load: function(id, config){					alert(id);				}			}		});		var root = !data ? [] : {			expanded:"true",			children:data		}		var store = Ext.create('Ext.data.TreeStore', {			model: 'Item',            root: root,            proxy: {				type: 'memory',				reader: {					type: 'json'				}			}        });		store.proxy.read = function(operation, callback, scope) {			var dataNode = operation.node.data;			gwtGetDataPlugin({				id:pluginParams.id,				parentId:parentId,				params: {					id:dataNode.id,					name:dataNode.name				},				callbackFn: function(data) {					if (data) {						if (!Ext.isArray(data)) {							data = [data];						}						operation.resultSet = store.proxy.getReader().read(data);						}												operation.setCompleted();					operation.setSuccessful();					Ext.callback(callback, scope || me, [operation]);				}			});		}		var option = {			store: store,			columns: [				{xtype: 'treecolumn', header: 'Название', dataIndex: 'name', flex: 1}			],			hideHeaders:true,            rootVisible: false,            useArrows: true,            frame: true,            title: 'Check Tree',            renderTo: parent,            width: parent.getWidth(),            height: parent.getHeight()		};        option = Ext.apply(option, pluginParams);        var tree = Ext.create('Ext.tree.Panel', option);				if (Ext.isFunction(pluginParams.onDrawPluginComplete)) {			pluginParams.onDrawPluginComplete(tree);		}    });}